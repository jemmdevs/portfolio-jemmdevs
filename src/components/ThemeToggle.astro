<button id="themeToggle" aria-label="Toggle theme">
  <svg width="20px" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" class="sun">
    <path
      d="M12 3V5M5.6 5.6L7 7M3 12H5M5.6 18.4L7 17M12 21V19M18.4 18.4L17 17M21 12H19M18.4 5.6L17 7M12 7C9.24 7 7 9.24 7 12C7 14.76 9.24 17 12 17C14.76 17 17 14.76 17 12C17 9.24 14.76 7 12 7Z"
      stroke="currentColor" 
      stroke-width="2" 
      stroke-linecap="round" 
      stroke-linejoin="round"
      fill="none"
    ></path>
  </svg>
  <svg width="20px" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" class="moon">
    <path
      d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"
      stroke="currentColor" 
      stroke-width="2" 
      stroke-linecap="round" 
      stroke-linejoin="round"
      fill="none"
    ></path>
  </svg>
</button>

<style>
  #themeToggle {
    border: 0;
    background-color: rgba(128, 128, 128, 0.2);
    cursor: pointer;
    padding: 0.5rem;
    border-radius: 50%;
    transition: all 0.2s ease;
    width: 35px;
    height: 35px;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  #themeToggle:hover {
    background-color: rgba(128, 128, 128, 0.4);
  }

  .sun, .moon {
    stroke: currentColor;
    stroke-width: 2;
    width: 24px;
    height: 24px;
  }

  /* Light mode (default) */
  :global(.light) #themeToggle {
    background-color: rgba(0, 0, 0, 0.1);
    color: #000;
    box-shadow: 0 0 5px rgba(0, 0, 0, 0.1);
  }

  /* Dark mode */
  :global(.dark) #themeToggle {
    background-color: rgba(255, 255, 255, 0.1);
    color: #fff;
    box-shadow: 0 0 5px rgba(255, 255, 255, 0.1);
  }

  :global(.dark) .sun { display: block; }
  :global(.dark) .moon { display: none; }
  :global(.light) .sun { display: none; }
  :global(.light) .moon { display: block; }

  @media (prefers-color-scheme: dark) {
    .sun { display: block; }
    .moon { display: none; }
  }

  @media (prefers-color-scheme: light) {
    .sun { display: none; }
    .moon { display: block; }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const theme = (() => {
      if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
        return localStorage.getItem('theme') || 'light';
      }
      if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
        return 'dark';
      }
      return 'light';
    })();
      
    if (theme === 'light') {
      document.documentElement.classList.remove('dark');
      document.documentElement.classList.add('light');
      document.body.classList.remove('dark');
      document.body.classList.add('light');
    } else {
      document.documentElement.classList.add('dark');
      document.documentElement.classList.remove('light');
      document.body.classList.add('dark');
      document.body.classList.remove('light');
    }

    window.localStorage.setItem('theme', theme);

    const handleToggleClick = () => {
      const element = document.documentElement;
      element.classList.toggle("dark");
      element.classList.toggle("light");
      
      document.body.classList.toggle("dark");
      document.body.classList.toggle("light");
      
      const isDark = element.classList.contains("dark");
      localStorage.setItem("theme", isDark ? "dark" : "light");
    }

    const themeToggle = document.getElementById("themeToggle");
    if (themeToggle) {
      themeToggle.addEventListener("click", handleToggleClick);
    }
  });
</script>